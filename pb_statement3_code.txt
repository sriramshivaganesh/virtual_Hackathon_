# class average_days:
import pandas as pd
x = pd.read_csv(r'C:\Users\shiva\Downloads\Dataset for Problem Statement 1,3.csv')
data=pd.DataFrame(x)
def country_average(country_name):
        country=data[data.Country == country_name]
        confirmed=country[country.Confirmed > 0]
        death=country[country.Deaths > 0]
        recoverd=country[country.Recovered > 0]
        def date(i):
            c=list(confirmed.Date.iloc[i])
            d=list(death.Date.iloc[i])
            r=list(recoverd.Date.iloc[i])
            r_state=int(r[8])*10+int(r[9])-int(c[8])*10-int(c[9])
            d_state=int(d[8])*10+int(d[9])-int(c[8])*10-int(c[9])
            if r_state < 0:
                r_state=r_state+30
            else:
                r_state=r_state
            if d_state < 0:
                d_state=d_state+30
            else:
                d_state = d_state
            return r_state,d_state
        rs=list()
        ds=list()
        rth,dth=0,0
        for q in range(0,7):
            a=date(q)
            rs.append(a[0])
            ds.append(a[1])
        for f in range(0,7):
            rth=rth+rs[f]
            dth=dth+ds[f]
        return int(rth/7),int(dth/7)
def max_country():
        #only these countries mentioned in list are taken for consideration
        country_list=['US','Spain','Italy','France','Germany','United Kingdom','Turkey','Iran','Russia','Brazil','Belgium',
                     'Canada','Netherlands','Switzerland','Portugal','India','Ireland','Sweden','Saudi Arabia','Japan',
                     'Singapore','Pakistan','Indonesia','Philippines','Australia','Dominican Republic','South Africa','Argentina','New Zealand','Sri Lanka']
        country_d=list()
        country_r=list() 
        for country_name in country_list:
            result=country_average(country_name)
            country_r.append(result[0])
            country_d.append(result[1])
        r_list=list(zip(country_list,country_r))
        d_list=list(zip(country_list,country_d))
        r_list=sorted(r_list, key = lambda x: x[1],reverse=True)
        d_list=sorted(d_list, key = lambda x: x[1],reverse=True)
        print('%s took max no.of days to turn confirmed case into death state is %d'%(d_list[0][0],d_list[0][1]))
        print('%s took max no.of days to turn confirmed case into recovered state is %d'%(r_list[0][0],r_list[0][1]))
def country_max_day():
    name=input("Enter the name of country")
    n=country_average(name)
    print('%s took %d days to turn confirmed case into death state '%(name,n[1]))
    print('%s took %d days to turn confirmed case into recovered state '%(name,n[0]))
    
    
# final_dict={'1':country_max_day(),'2':max_country(),'3':'exit'}
num=0
while(num!='3'):
    num=input('If you want country max day enter 1 or for max country entry enter 2 or for exit enter 3\n')
    if num=='1':
        country_max_day()
    elif num=='2':
        max_country()
    else:
        print('Exit')
